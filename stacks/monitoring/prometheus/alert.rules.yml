groups:
- name: node
  rules:
  - alert: HighCPUUsage
    expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: High CPU usage on {{ $labels.instance }}
      description: CPU usage is above 80% on instance {{ $labels.instance }}

  - alert: HighMemoryUsage
    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 90
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: High memory usage on {{ $labels.instance }}
      description: Memory usage is above 90% on instance {{ $labels.instance }}

  - alert: HighDiskUsage
    expr: 100 - ((node_filesystem_avail_bytes{mountpoint="/"} * 100) / node_filesystem_size_bytes{mountpoint="/"}) > 85
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: High disk usage on {{ $labels.instance }}
      description: Disk usage is above 85% on instance {{ $labels.instance }}

  - alert: InstanceDown
    expr: up == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Instance {{ $labels.instance }} down
      description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.'

- name: http
  rules:
  - alert: HighHTTPLatency
    expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, instance)) > 2
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: High HTTP latency on {{ $labels.instance }}
      description: 95th percentile of HTTP request latency is above 2 seconds on {{ $labels.instance }}

  - alert: HighHTTPErrorRate
    expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) * 100 > 5
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: High HTTP error rate on {{ $labels.instance }}
      description: HTTP error rate is above 5% on {{ $labels.instance }}

- name: database
  rules:
  - alert: PostgreSQLHighConnections
    expr: pg_stat_activity_count > pg_settings_max_connections * 0.8
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: PostgreSQL high connection count on {{ $labels.instance }}
      description: PostgreSQL instance has used more than 80% of available connections

  - alert: PostgreSQLSlowQueries
    expr: rate(pg_stat_activity_max_tx_duration{datname!~"template.*"}[1m]) > 60
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: PostgreSQL slow queries on {{ $labels.instance }}
      description: PostgreSQL queries are taking more than 60 seconds on {{ $labels.instance }}

- name: application
  rules:
  - alert: APIHighErrorRate
    expr: rate(api_http_requests_total{status=~"5.."}[5m]) / rate(api_http_requests_total[5m]) * 100 > 5
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: High API error rate
      description: API error rate is above 5%

  - alert: APIHighLatency
    expr: histogram_quantile(0.95, sum(rate(api_http_request_duration_seconds_bucket[5m])) by (le)) > 1
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: High API latency
      description: 95th percentile of API latency is above 1 second

- name: custom
  rules:
  - alert: BatchJobFailure
    expr: batch_job_status{job="important_batch_job"} != 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Batch job failure
      description: The important batch job has failed

  - alert: UserSignupSpike
    expr: rate(user_signups_total[5m]) > 10
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: User signup spike detected
      description: User signups are occurring at a rate higher than 10 per 5 minutes

- name: test
  rules:
  - alert: TestAlert
    expr: vector(1)
    labels:
      severity: test
    annotations:
      summary: "This is a test alert"
      description: "This alert was triggered manually to test the Alertmanager"
      
- name: node_exporter
  rules:
  - alert: NodeExporterDown
    expr: up{job="monitoring_node_exporter"} == 0
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "Node Exporter is down"
      description: "Node Exporter has been down for more than 1 minute on {{ $labels.instance }}"

- name: disk_alerts  # Nome do grupo de alertas
  rules:
    - alert: DiskSpaceRunningLow
      expr: |
        (
          node_filesystem_avail_bytes{mountpoint="/"}
          / 
          node_filesystem_size_bytes{mountpoint="/"}
        ) * 100 < 20
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Disco com pouco espaço (instância {{ $labels.instance }})"
        description: "O espaço em disco está abaixo de 20%\n  VALOR = {{ $value }}%\n  INSTÂNCIA = {{ $labels.instance }}"

    - alert: PrometheusDiskSpaceRunningLow
      expr: |
        (
          node_filesystem_avail_bytes{mountpoint="/prometheus"}
          / 
          node_filesystem_size_bytes{mountpoint="/prometheus"}
        ) * 100 < 20
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Volume do Prometheus com pouco espaço (instância {{ $labels.instance }})"
        description: "O espaço no volume do Prometheus está abaixo de 20%\n  VALOR = {{ $value }}%\n  INSTÂNCIA = {{ $labels.instance }}"

    - alert: LokiDiskSpaceRunningLow
      expr: |
        (
          node_filesystem_avail_bytes{mountpoint="/loki"}
          / 
          node_filesystem_size_bytes{mountpoint="/loki"}
        ) * 100 < 20
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Volume do Loki com pouco espaço (instância {{ $labels.instance }})"
        description: "O espaço no volume do Loki está abaixo de 20%\n  VALOR = {{ $value }}%\n  INSTÂNCIA = {{ $labels.instance }}"